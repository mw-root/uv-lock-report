name: Report uv.lock Changes
branding:
  icon: arrow-up-right
  color: green
description: |-
  Digests complex `uv.lock` diffs in Pull Requests and provides a
  simple summary of dependency changes as a PR comment.
inputs:
  github-token:
    description: GitHub Token
    required: true
  show-learn-more-link:
    description: >-
      Whether to show a "Learn More" link in the report comment.
    required: false
    default: "true"
  output-format:
    description: >-
      The output format of the report. One of: simple, table
    required: false
    default: simple
outputs: {}
runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7

    - name: Report
      id: report
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        uv sync
        uv run main.py \
          --base-sha "${{ github.event.pull_request.base.sha }}" \
          --base-path "${{ github.workspace }}" \
          --output-path ${{ github.action_path }}/report.json \
          --output-format "${{ inputs.output-format }}" \
          --show-learn-more-link "${{ inputs.show-learn-more-link }}"
        echo report=$(cat report.json) >> "$GITHUB_OUTPUT"

    - name: Post a comment to the PR
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      if: fromJSON(steps.report.outputs.report).items !=0
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          // Find existing report comments for the PR
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          const lockReportComment = comments.find(comment => {
            return comment.user.type === 'Bot' && comment.body.includes('# uv Lockfile Report')
            });
          // Delete existing report comments
          if (lockReportComment) {
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: lockReportComment.id,
            });
          }
          // Post new report comment
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ fromJSON(steps.report.outputs.report).markdown }}`
          })
