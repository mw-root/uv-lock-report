name: Report uv.lock Changes
description: |-
  Parses any changes to uv.lock in a Pull Request and
  creates a PR comment with details of any new, removed, or
  updated packages
inputs:
  github-token:
    description: GitHub Token
    required: true
outputs: {}
runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Report
      id: report
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        uv sync
        uv run main.py "${{ github.event.pull_request.base.sha }}" "${{ github.workspace }}" ${{ github.action_path }}/report.json
        echo report=$(cat report.json) >> "$GITHUB_OUTPUT"
        echo

    - name: Post a comment to the PR
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      if: fromJSON(steps.report.outputs.report).items !=0
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          // 1. Retrieve existing bot comments for the PR
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          const lockReportComment = comments.find(comment => {
            return comment.user.type === 'Bot' && comment.body.includes('# uv Lockfile Report')
            });
          if (lockReportComment) {
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: lockReportComment.id,
            });
          }
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ fromJSON(steps.report.outputs.report).markdown }}`
          })
